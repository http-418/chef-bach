#
# Ubuntu 14.04 Preseed File
#
# This file was generated by Chef.
# Local changes will be reverted.
#
# Based on Canonical's example preseed:
# https://help.ubuntu.com/14.04/installation-guide/example-preseed.txt
#

### Localization
d-i debian-installer/locale string en_US
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_nameservers  string <%= @node[:bcpc][:dns_servers].join(' ') %>
d-i netcfg/get_ipaddress    string 
d-i netcfg/get_netmask      string <%= @node[:bcpc][:management][:netmask] %>
d-i netcfg/get_gateway      string <%= @node[:bcpc][:management][:gateway] %>
d-i netcfg/confirm_static   boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/country string manual
<%
  require 'uri'
  mirror_url =
    begin
      if(@node[:bcpc][:bootstrap][:mirror])
        # Old-style environment, with only a host name.
        URI.parse('http://' + @node[:bcpc][:bootstrap][:mirror].to_s +
	          '/ubuntu')
      else
        # New-style environment with complete host
        URI.parse(@node[:bcpc][:bootstrap][:mirror_url])
      end
    rescue
      # Nothing supplied in the environment, just use public mirror.
      URI.parse('http://us.archive.ubuntu.com/ubuntu')
    end
%>
d-i mirror/http/directory string <%= mirror_url.path %>
d-i mirror/http/hostname string <%= mirror_url.host %>
<% if @node[:bcpc][:bootstrap][:proxy].nil? %>
d-i mirror/http/proxy string
<% else %>
d-i mirror/http/proxy string <%= @node[:bcpc][:bootstrap][:proxy] %>
<% end %>
d-i mirror/suite string trusty

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string US/Eastern
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string <%= @node[:ntp][:servers].first %>

### Partitioning
d-i partman/early_command string \
      udevadm trigger; udevadm settle --timeout=30 \
      for d in $(ls /dev/sd[a-z]); do \
        dd if=/dev/zero of=$d bs=4M count=16 || echo "Write to $d failed" \
      done
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string lvm
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-auto-lvm/guided_size string max
d-i partman-auto/choose_recipe select atomic
d-i partman/default_filesystem string ext4

# This makes partman automatically partition without confirmation.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true
d-i partman-md/device_remove_md boolean true


### Base system installation
d-i base-installer/kernel/image     string <%= @node[:bcpc][:bootstrap][:preseed][:kernel] %>

### Account setup
d-i passwd/root-login boolean false
d-i passwd/make-user boolean true

d-i passwd/user-fullname string ubuntu
d-i passwd/username string ubuntu
d-i passwd/user-password-crypted password <%="#{get_config!('root-password-salted','cobbler','os')}"%>
d-i passwd/user-uid string
d-i passwd/user-default-groups string adm

d-i user-setup/encrypt-home boolean false

### Apt setup
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/backports boolean true

d-i apt-setup/services-select multiselect security
<% if @node[:bcpc][:bootstrap][:mirror].nil? %>
d-i apt-setup/security_host string security.ubuntu.com
<% else %>
d-i apt-setup/security_host string <%= @node[:bcpc][:bootstrap][:mirror] %>
<% end %>
d-i apt-setup/security_path string /ubuntu

#d-i debian-installer/allow_unauthenticated boolean false

### Package selection
d-i pkgsel/upgrade select safe-upgrade
d-i pkgsel/language-packs multiselect
d-i pkgsel/update-policy select none
d-i pkgsel/updatedb boolean false
d-i pkgsel/include string openssh-server lldpd

### Boot loader installation
d-i grub-installer/skip boolean false
d-i lilo-installer/skip boolean true
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i debian-installer/add-kernel-opts string <%= @node[:bcpc][:bootstrap][:preseed][:add_kernel_opts] %>

### Finishing up the installation
d-i finish-install/keep-consoles boolean false
d-i finish-install/reboot_in_progress note
d-i cdrom-detect/eject boolean true
d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false

d-i preseed/late_command string <%= @node[:bcpc][:bootstrap][:preseed][:late_command] %> && \
    in-target apt-get -y install linux-crashdump kdump-tools && \
    in-target sed -i 's/USE_KDUMP=0/USE_KDUMP=1/' /etc/default/kdump-tools && \
    in-target sed -i 's/#MAKEDUMP_ARGS="-c -d 31"/MAKEDUMP_ARGS="-c -d 31"/' /etc/default/kdump-tools && \
    wget "http://$http_server:$http_port/cblr/svc/op/nopxe/system/$system_name" -O /dev/null
