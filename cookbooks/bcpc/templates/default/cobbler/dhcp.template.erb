# -*- mode: conf-unix -*-
################################################
#
#              Generated by Chef
#
################################################

# ******************************************************************
# Cobbler managed dhcpd.conf file
#
# generated from cobbler dhcp.conf template ($date)
# Do NOT make changes to /etc/dhcpd.conf. Instead, make your changes
# in /etc/cobbler/dhcp.template, as /etc/dhcpd.conf will be
# overwritten.
#
# ******************************************************************

ddns-update-style interim;

allow booting;
allow bootp;

ignore client-updates;
set vendorclass = option vendor-class-identifier;
option pxe-system-type code 93 = unsigned integer 16;

<% require 'ipaddr'
   @subnets.keys.each do |subnet|
     subnet_node = @node[:bcpc][:networks][subnet][:management]
%>
subnet <%= IPAddr.new(subnet_node[:cidr]).to_string %> netmask <%= subnet_node[:netmask] %> {
     option routers             <%= subnet_node[:gateway] %>;
     option domain-name-servers <%= @node[:bcpc][:dns_servers].join(', ') %>;
     option subnet-mask         <%= subnet_node[:netmask] %>;
     option domain-name         "<%= @node[:bcpc][:domain_name] %>";
     <% if subnet_node.attribute?("dhcp_range") and subnet_node[:dhcp_range] %>
     <%= "range dynamic-bootp        #{subnet_node[:dhcp_range]};" %>
     <% end %>
     filename                   "/pxelinux.0";
     default-lease-time         21600;
     max-lease-time             43200;
     next-server                $next_server;
}
<% end %>

#for dhcp_tag in $dhcp_tags.keys():
    ## group could be subnet if your dhcp tags line up with your subnets
    ## or really any valid dhcpd.conf construct ... if you only use the
    ## default dhcp tag in cobbler, the group block can be deleted for a
    ## flat configuration
# group for Cobbler DHCP tag: $dhcp_tag
group {
        #for mac in $dhcp_tags[$dhcp_tag].keys():
            #set iface = $dhcp_tags[$dhcp_tag][$mac]
    host $iface.hostname {
        hardware ethernet $mac;
        #if $iface.ip_address:
        fixed-address $iface.ip_address;
        #end if
        #if $iface.hostname:
        option host-name "$iface.hostname";
        #end if
        #if $iface.netmask:
        option subnet-mask $iface.netmask;
        #end if
        #if $iface.gateway:
        option routers $iface.gateway;
        #end if

        ##
	## Four categories of clients, three outcomes:
	##
	## 1. UEFI + iPXE => boot a kernel directly via iPXE script
	## 2. Legacy + iPXE => chainload syslinux
	## 3. UEFI - iPXE => chainload an iPXE UEFI application
	## 4. Legacy - iPXE => chainload syslinux
	##
	## This is done based on DHCP option 93.
	##
	## EFI x86_64 clients will send either 00:07 (EFI bytecode) or
	## 00:09 (EFI x86_64)
	##
	## Legacy BIOS iPXE clients will send option 00:00.
	##
	if exists user-class and option user-class = "iPXE" {
	  if option pxe-system-type = 00:00 {
	    filename "/pxelinux.0";
	  } else {
   	    filename "http://$next_server/cblr/svc/op/gpxe/system/$iface.owner";
	  }
        } else if option pxe-system-type = 00:07 {
	  filename "/ipxe-x86_64.efi";
	} else if option pxe-system-type = 00:09 {
	  filename "/ipxe-x86_64.efi";
	} else {
          filename "/pxelinux.0";
        }
	
        ## Cobbler defaults to $next_server, but some users
        ## may like to use $iface.system.server for proxied setups
        next-server $next_server;
        ## next-server $iface.next_server;
    }
        #end for
}
#end for

